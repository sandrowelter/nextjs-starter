
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `padroes_grupos` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model padroes_grupos
 * 
 */
export type padroes_gruposModel = runtime.Types.Result.DefaultSelection<Prisma.$padroes_gruposPayload>

export type AggregatePadroes_grupos = {
  _count: Padroes_gruposCountAggregateOutputType | null
  _min: Padroes_gruposMinAggregateOutputType | null
  _max: Padroes_gruposMaxAggregateOutputType | null
}

export type Padroes_gruposMinAggregateOutputType = {
  id: string | null
  grupo: string | null
}

export type Padroes_gruposMaxAggregateOutputType = {
  id: string | null
  grupo: string | null
}

export type Padroes_gruposCountAggregateOutputType = {
  id: number
  grupo: number
  _all: number
}


export type Padroes_gruposMinAggregateInputType = {
  id?: true
  grupo?: true
}

export type Padroes_gruposMaxAggregateInputType = {
  id?: true
  grupo?: true
}

export type Padroes_gruposCountAggregateInputType = {
  id?: true
  grupo?: true
  _all?: true
}

export type Padroes_gruposAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which padroes_grupos to aggregate.
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of padroes_grupos to fetch.
   */
  orderBy?: Prisma.padroes_gruposOrderByWithRelationInput | Prisma.padroes_gruposOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.padroes_gruposWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` padroes_grupos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` padroes_grupos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned padroes_grupos
  **/
  _count?: true | Padroes_gruposCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Padroes_gruposMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Padroes_gruposMaxAggregateInputType
}

export type GetPadroes_gruposAggregateType<T extends Padroes_gruposAggregateArgs> = {
      [P in keyof T & keyof AggregatePadroes_grupos]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePadroes_grupos[P]>
    : Prisma.GetScalarType<T[P], AggregatePadroes_grupos[P]>
}




export type padroes_gruposGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.padroes_gruposWhereInput
  orderBy?: Prisma.padroes_gruposOrderByWithAggregationInput | Prisma.padroes_gruposOrderByWithAggregationInput[]
  by: Prisma.Padroes_gruposScalarFieldEnum[] | Prisma.Padroes_gruposScalarFieldEnum
  having?: Prisma.padroes_gruposScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Padroes_gruposCountAggregateInputType | true
  _min?: Padroes_gruposMinAggregateInputType
  _max?: Padroes_gruposMaxAggregateInputType
}

export type Padroes_gruposGroupByOutputType = {
  id: string
  grupo: string
  _count: Padroes_gruposCountAggregateOutputType | null
  _min: Padroes_gruposMinAggregateOutputType | null
  _max: Padroes_gruposMaxAggregateOutputType | null
}

type GetPadroes_gruposGroupByPayload<T extends padroes_gruposGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Padroes_gruposGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Padroes_gruposGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Padroes_gruposGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Padroes_gruposGroupByOutputType[P]>
      }
    >
  > 



export type padroes_gruposWhereInput = {
  AND?: Prisma.padroes_gruposWhereInput | Prisma.padroes_gruposWhereInput[]
  OR?: Prisma.padroes_gruposWhereInput[]
  NOT?: Prisma.padroes_gruposWhereInput | Prisma.padroes_gruposWhereInput[]
  id?: Prisma.StringFilter<"padroes_grupos"> | string
  grupo?: Prisma.StringFilter<"padroes_grupos"> | string
  subgrupos?: Prisma.Padroes_subgruposListRelationFilter
}

export type padroes_gruposOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  grupo?: Prisma.SortOrder
  subgrupos?: Prisma.padroes_subgruposOrderByRelationAggregateInput
}

export type padroes_gruposWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.padroes_gruposWhereInput | Prisma.padroes_gruposWhereInput[]
  OR?: Prisma.padroes_gruposWhereInput[]
  NOT?: Prisma.padroes_gruposWhereInput | Prisma.padroes_gruposWhereInput[]
  grupo?: Prisma.StringFilter<"padroes_grupos"> | string
  subgrupos?: Prisma.Padroes_subgruposListRelationFilter
}, "id">

export type padroes_gruposOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  grupo?: Prisma.SortOrder
  _count?: Prisma.padroes_gruposCountOrderByAggregateInput
  _max?: Prisma.padroes_gruposMaxOrderByAggregateInput
  _min?: Prisma.padroes_gruposMinOrderByAggregateInput
}

export type padroes_gruposScalarWhereWithAggregatesInput = {
  AND?: Prisma.padroes_gruposScalarWhereWithAggregatesInput | Prisma.padroes_gruposScalarWhereWithAggregatesInput[]
  OR?: Prisma.padroes_gruposScalarWhereWithAggregatesInput[]
  NOT?: Prisma.padroes_gruposScalarWhereWithAggregatesInput | Prisma.padroes_gruposScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"padroes_grupos"> | string
  grupo?: Prisma.StringWithAggregatesFilter<"padroes_grupos"> | string
}

export type padroes_gruposCreateInput = {
  id: string
  grupo: string
  subgrupos?: Prisma.padroes_subgruposCreateNestedManyWithoutGrupoInput
}

export type padroes_gruposUncheckedCreateInput = {
  id: string
  grupo: string
  subgrupos?: Prisma.padroes_subgruposUncheckedCreateNestedManyWithoutGrupoInput
}

export type padroes_gruposUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
  subgrupos?: Prisma.padroes_subgruposUpdateManyWithoutGrupoNestedInput
}

export type padroes_gruposUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
  subgrupos?: Prisma.padroes_subgruposUncheckedUpdateManyWithoutGrupoNestedInput
}

export type padroes_gruposCreateManyInput = {
  id: string
  grupo: string
}

export type padroes_gruposUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
}

export type padroes_gruposUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
}

export type padroes_gruposCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  grupo?: Prisma.SortOrder
}

export type padroes_gruposMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  grupo?: Prisma.SortOrder
}

export type padroes_gruposMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  grupo?: Prisma.SortOrder
}

export type Padroes_gruposScalarRelationFilter = {
  is?: Prisma.padroes_gruposWhereInput
  isNot?: Prisma.padroes_gruposWhereInput
}

export type padroes_gruposCreateNestedOneWithoutSubgruposInput = {
  create?: Prisma.XOR<Prisma.padroes_gruposCreateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedCreateWithoutSubgruposInput>
  connectOrCreate?: Prisma.padroes_gruposCreateOrConnectWithoutSubgruposInput
  connect?: Prisma.padroes_gruposWhereUniqueInput
}

export type padroes_gruposUpdateOneRequiredWithoutSubgruposNestedInput = {
  create?: Prisma.XOR<Prisma.padroes_gruposCreateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedCreateWithoutSubgruposInput>
  connectOrCreate?: Prisma.padroes_gruposCreateOrConnectWithoutSubgruposInput
  upsert?: Prisma.padroes_gruposUpsertWithoutSubgruposInput
  connect?: Prisma.padroes_gruposWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.padroes_gruposUpdateToOneWithWhereWithoutSubgruposInput, Prisma.padroes_gruposUpdateWithoutSubgruposInput>, Prisma.padroes_gruposUncheckedUpdateWithoutSubgruposInput>
}

export type padroes_gruposCreateWithoutSubgruposInput = {
  id: string
  grupo: string
}

export type padroes_gruposUncheckedCreateWithoutSubgruposInput = {
  id: string
  grupo: string
}

export type padroes_gruposCreateOrConnectWithoutSubgruposInput = {
  where: Prisma.padroes_gruposWhereUniqueInput
  create: Prisma.XOR<Prisma.padroes_gruposCreateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedCreateWithoutSubgruposInput>
}

export type padroes_gruposUpsertWithoutSubgruposInput = {
  update: Prisma.XOR<Prisma.padroes_gruposUpdateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedUpdateWithoutSubgruposInput>
  create: Prisma.XOR<Prisma.padroes_gruposCreateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedCreateWithoutSubgruposInput>
  where?: Prisma.padroes_gruposWhereInput
}

export type padroes_gruposUpdateToOneWithWhereWithoutSubgruposInput = {
  where?: Prisma.padroes_gruposWhereInput
  data: Prisma.XOR<Prisma.padroes_gruposUpdateWithoutSubgruposInput, Prisma.padroes_gruposUncheckedUpdateWithoutSubgruposInput>
}

export type padroes_gruposUpdateWithoutSubgruposInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
}

export type padroes_gruposUncheckedUpdateWithoutSubgruposInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  grupo?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type Padroes_gruposCountOutputType
 */

export type Padroes_gruposCountOutputType = {
  subgrupos: number
}

export type Padroes_gruposCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  subgrupos?: boolean | Padroes_gruposCountOutputTypeCountSubgruposArgs
}

/**
 * Padroes_gruposCountOutputType without action
 */
export type Padroes_gruposCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Padroes_gruposCountOutputType
   */
  select?: Prisma.Padroes_gruposCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Padroes_gruposCountOutputType without action
 */
export type Padroes_gruposCountOutputTypeCountSubgruposArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.padroes_subgruposWhereInput
}


export type padroes_gruposSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  grupo?: boolean
  subgrupos?: boolean | Prisma.padroes_grupos$subgruposArgs<ExtArgs>
  _count?: boolean | Prisma.Padroes_gruposCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["padroes_grupos"]>

export type padroes_gruposSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  grupo?: boolean
}, ExtArgs["result"]["padroes_grupos"]>

export type padroes_gruposSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  grupo?: boolean
}, ExtArgs["result"]["padroes_grupos"]>

export type padroes_gruposSelectScalar = {
  id?: boolean
  grupo?: boolean
}

export type padroes_gruposOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "grupo", ExtArgs["result"]["padroes_grupos"]>
export type padroes_gruposInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  subgrupos?: boolean | Prisma.padroes_grupos$subgruposArgs<ExtArgs>
  _count?: boolean | Prisma.Padroes_gruposCountOutputTypeDefaultArgs<ExtArgs>
}
export type padroes_gruposIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type padroes_gruposIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $padroes_gruposPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "padroes_grupos"
  objects: {
    subgrupos: Prisma.$padroes_subgruposPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    grupo: string
  }, ExtArgs["result"]["padroes_grupos"]>
  composites: {}
}

export type padroes_gruposGetPayload<S extends boolean | null | undefined | padroes_gruposDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload, S>

export type padroes_gruposCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<padroes_gruposFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Padroes_gruposCountAggregateInputType | true
  }

export interface padroes_gruposDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['padroes_grupos'], meta: { name: 'padroes_grupos' } }
  /**
   * Find zero or one Padroes_grupos that matches the filter.
   * @param {padroes_gruposFindUniqueArgs} args - Arguments to find a Padroes_grupos
   * @example
   * // Get one Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends padroes_gruposFindUniqueArgs>(args: Prisma.SelectSubset<T, padroes_gruposFindUniqueArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Padroes_grupos that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {padroes_gruposFindUniqueOrThrowArgs} args - Arguments to find a Padroes_grupos
   * @example
   * // Get one Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends padroes_gruposFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, padroes_gruposFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Padroes_grupos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposFindFirstArgs} args - Arguments to find a Padroes_grupos
   * @example
   * // Get one Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends padroes_gruposFindFirstArgs>(args?: Prisma.SelectSubset<T, padroes_gruposFindFirstArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Padroes_grupos that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposFindFirstOrThrowArgs} args - Arguments to find a Padroes_grupos
   * @example
   * // Get one Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends padroes_gruposFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, padroes_gruposFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Padroes_grupos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findMany()
   * 
   * // Get first 10 Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const padroes_gruposWithIdOnly = await prisma.padroes_grupos.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends padroes_gruposFindManyArgs>(args?: Prisma.SelectSubset<T, padroes_gruposFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Padroes_grupos.
   * @param {padroes_gruposCreateArgs} args - Arguments to create a Padroes_grupos.
   * @example
   * // Create one Padroes_grupos
   * const Padroes_grupos = await prisma.padroes_grupos.create({
   *   data: {
   *     // ... data to create a Padroes_grupos
   *   }
   * })
   * 
   */
  create<T extends padroes_gruposCreateArgs>(args: Prisma.SelectSubset<T, padroes_gruposCreateArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Padroes_grupos.
   * @param {padroes_gruposCreateManyArgs} args - Arguments to create many Padroes_grupos.
   * @example
   * // Create many Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends padroes_gruposCreateManyArgs>(args?: Prisma.SelectSubset<T, padroes_gruposCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Padroes_grupos and returns the data saved in the database.
   * @param {padroes_gruposCreateManyAndReturnArgs} args - Arguments to create many Padroes_grupos.
   * @example
   * // Create many Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Padroes_grupos and only return the `id`
   * const padroes_gruposWithIdOnly = await prisma.padroes_grupos.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends padroes_gruposCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, padroes_gruposCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Padroes_grupos.
   * @param {padroes_gruposDeleteArgs} args - Arguments to delete one Padroes_grupos.
   * @example
   * // Delete one Padroes_grupos
   * const Padroes_grupos = await prisma.padroes_grupos.delete({
   *   where: {
   *     // ... filter to delete one Padroes_grupos
   *   }
   * })
   * 
   */
  delete<T extends padroes_gruposDeleteArgs>(args: Prisma.SelectSubset<T, padroes_gruposDeleteArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Padroes_grupos.
   * @param {padroes_gruposUpdateArgs} args - Arguments to update one Padroes_grupos.
   * @example
   * // Update one Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends padroes_gruposUpdateArgs>(args: Prisma.SelectSubset<T, padroes_gruposUpdateArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Padroes_grupos.
   * @param {padroes_gruposDeleteManyArgs} args - Arguments to filter Padroes_grupos to delete.
   * @example
   * // Delete a few Padroes_grupos
   * const { count } = await prisma.padroes_grupos.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends padroes_gruposDeleteManyArgs>(args?: Prisma.SelectSubset<T, padroes_gruposDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Padroes_grupos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends padroes_gruposUpdateManyArgs>(args: Prisma.SelectSubset<T, padroes_gruposUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Padroes_grupos and returns the data updated in the database.
   * @param {padroes_gruposUpdateManyAndReturnArgs} args - Arguments to update many Padroes_grupos.
   * @example
   * // Update many Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Padroes_grupos and only return the `id`
   * const padroes_gruposWithIdOnly = await prisma.padroes_grupos.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends padroes_gruposUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, padroes_gruposUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Padroes_grupos.
   * @param {padroes_gruposUpsertArgs} args - Arguments to update or create a Padroes_grupos.
   * @example
   * // Update or create a Padroes_grupos
   * const padroes_grupos = await prisma.padroes_grupos.upsert({
   *   create: {
   *     // ... data to create a Padroes_grupos
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Padroes_grupos we want to update
   *   }
   * })
   */
  upsert<T extends padroes_gruposUpsertArgs>(args: Prisma.SelectSubset<T, padroes_gruposUpsertArgs<ExtArgs>>): Prisma.Prisma__padroes_gruposClient<runtime.Types.Result.GetResult<Prisma.$padroes_gruposPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Padroes_grupos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposCountArgs} args - Arguments to filter Padroes_grupos to count.
   * @example
   * // Count the number of Padroes_grupos
   * const count = await prisma.padroes_grupos.count({
   *   where: {
   *     // ... the filter for the Padroes_grupos we want to count
   *   }
   * })
  **/
  count<T extends padroes_gruposCountArgs>(
    args?: Prisma.Subset<T, padroes_gruposCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Padroes_gruposCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Padroes_grupos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Padroes_gruposAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Padroes_gruposAggregateArgs>(args: Prisma.Subset<T, Padroes_gruposAggregateArgs>): Prisma.PrismaPromise<GetPadroes_gruposAggregateType<T>>

  /**
   * Group by Padroes_grupos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {padroes_gruposGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends padroes_gruposGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: padroes_gruposGroupByArgs['orderBy'] }
      : { orderBy?: padroes_gruposGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, padroes_gruposGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPadroes_gruposGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the padroes_grupos model
 */
readonly fields: padroes_gruposFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for padroes_grupos.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__padroes_gruposClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  subgrupos<T extends Prisma.padroes_grupos$subgruposArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.padroes_grupos$subgruposArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$padroes_subgruposPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the padroes_grupos model
 */
export interface padroes_gruposFieldRefs {
  readonly id: Prisma.FieldRef<"padroes_grupos", 'String'>
  readonly grupo: Prisma.FieldRef<"padroes_grupos", 'String'>
}
    

// Custom InputTypes
/**
 * padroes_grupos findUnique
 */
export type padroes_gruposFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter, which padroes_grupos to fetch.
   */
  where: Prisma.padroes_gruposWhereUniqueInput
}

/**
 * padroes_grupos findUniqueOrThrow
 */
export type padroes_gruposFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter, which padroes_grupos to fetch.
   */
  where: Prisma.padroes_gruposWhereUniqueInput
}

/**
 * padroes_grupos findFirst
 */
export type padroes_gruposFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter, which padroes_grupos to fetch.
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of padroes_grupos to fetch.
   */
  orderBy?: Prisma.padroes_gruposOrderByWithRelationInput | Prisma.padroes_gruposOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for padroes_grupos.
   */
  cursor?: Prisma.padroes_gruposWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` padroes_grupos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` padroes_grupos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of padroes_grupos.
   */
  distinct?: Prisma.Padroes_gruposScalarFieldEnum | Prisma.Padroes_gruposScalarFieldEnum[]
}

/**
 * padroes_grupos findFirstOrThrow
 */
export type padroes_gruposFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter, which padroes_grupos to fetch.
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of padroes_grupos to fetch.
   */
  orderBy?: Prisma.padroes_gruposOrderByWithRelationInput | Prisma.padroes_gruposOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for padroes_grupos.
   */
  cursor?: Prisma.padroes_gruposWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` padroes_grupos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` padroes_grupos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of padroes_grupos.
   */
  distinct?: Prisma.Padroes_gruposScalarFieldEnum | Prisma.Padroes_gruposScalarFieldEnum[]
}

/**
 * padroes_grupos findMany
 */
export type padroes_gruposFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter, which padroes_grupos to fetch.
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of padroes_grupos to fetch.
   */
  orderBy?: Prisma.padroes_gruposOrderByWithRelationInput | Prisma.padroes_gruposOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing padroes_grupos.
   */
  cursor?: Prisma.padroes_gruposWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` padroes_grupos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` padroes_grupos.
   */
  skip?: number
  distinct?: Prisma.Padroes_gruposScalarFieldEnum | Prisma.Padroes_gruposScalarFieldEnum[]
}

/**
 * padroes_grupos create
 */
export type padroes_gruposCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * The data needed to create a padroes_grupos.
   */
  data: Prisma.XOR<Prisma.padroes_gruposCreateInput, Prisma.padroes_gruposUncheckedCreateInput>
}

/**
 * padroes_grupos createMany
 */
export type padroes_gruposCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many padroes_grupos.
   */
  data: Prisma.padroes_gruposCreateManyInput | Prisma.padroes_gruposCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * padroes_grupos createManyAndReturn
 */
export type padroes_gruposCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * The data used to create many padroes_grupos.
   */
  data: Prisma.padroes_gruposCreateManyInput | Prisma.padroes_gruposCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * padroes_grupos update
 */
export type padroes_gruposUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * The data needed to update a padroes_grupos.
   */
  data: Prisma.XOR<Prisma.padroes_gruposUpdateInput, Prisma.padroes_gruposUncheckedUpdateInput>
  /**
   * Choose, which padroes_grupos to update.
   */
  where: Prisma.padroes_gruposWhereUniqueInput
}

/**
 * padroes_grupos updateMany
 */
export type padroes_gruposUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update padroes_grupos.
   */
  data: Prisma.XOR<Prisma.padroes_gruposUpdateManyMutationInput, Prisma.padroes_gruposUncheckedUpdateManyInput>
  /**
   * Filter which padroes_grupos to update
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * Limit how many padroes_grupos to update.
   */
  limit?: number
}

/**
 * padroes_grupos updateManyAndReturn
 */
export type padroes_gruposUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * The data used to update padroes_grupos.
   */
  data: Prisma.XOR<Prisma.padroes_gruposUpdateManyMutationInput, Prisma.padroes_gruposUncheckedUpdateManyInput>
  /**
   * Filter which padroes_grupos to update
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * Limit how many padroes_grupos to update.
   */
  limit?: number
}

/**
 * padroes_grupos upsert
 */
export type padroes_gruposUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * The filter to search for the padroes_grupos to update in case it exists.
   */
  where: Prisma.padroes_gruposWhereUniqueInput
  /**
   * In case the padroes_grupos found by the `where` argument doesn't exist, create a new padroes_grupos with this data.
   */
  create: Prisma.XOR<Prisma.padroes_gruposCreateInput, Prisma.padroes_gruposUncheckedCreateInput>
  /**
   * In case the padroes_grupos was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.padroes_gruposUpdateInput, Prisma.padroes_gruposUncheckedUpdateInput>
}

/**
 * padroes_grupos delete
 */
export type padroes_gruposDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
  /**
   * Filter which padroes_grupos to delete.
   */
  where: Prisma.padroes_gruposWhereUniqueInput
}

/**
 * padroes_grupos deleteMany
 */
export type padroes_gruposDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which padroes_grupos to delete
   */
  where?: Prisma.padroes_gruposWhereInput
  /**
   * Limit how many padroes_grupos to delete.
   */
  limit?: number
}

/**
 * padroes_grupos.subgrupos
 */
export type padroes_grupos$subgruposArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_subgrupos
   */
  select?: Prisma.padroes_subgruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_subgrupos
   */
  omit?: Prisma.padroes_subgruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_subgruposInclude<ExtArgs> | null
  where?: Prisma.padroes_subgruposWhereInput
  orderBy?: Prisma.padroes_subgruposOrderByWithRelationInput | Prisma.padroes_subgruposOrderByWithRelationInput[]
  cursor?: Prisma.padroes_subgruposWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Padroes_subgruposScalarFieldEnum | Prisma.Padroes_subgruposScalarFieldEnum[]
}

/**
 * padroes_grupos without action
 */
export type padroes_gruposDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the padroes_grupos
   */
  select?: Prisma.padroes_gruposSelect<ExtArgs> | null
  /**
   * Omit specific fields from the padroes_grupos
   */
  omit?: Prisma.padroes_gruposOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.padroes_gruposInclude<ExtArgs> | null
}
